{
  "name": "koa-better-body",
  "description": "A koa body parser middleware with support for `multipart`, `json`, `csp-report` or `urlencoded` request bodies. Via formidable and co-body.",
  "version": "1.0.17",
  "scripts": {
    "lint": "jshint index.js && jscs index.js --reporter inline --esnext",
    "test": "mocha --harmony-generators --require should",
    "test-cov": "node --harmony node_modules/.bin/istanbul cover node_modules/.bin/_mocha -- --require should",
    "test-travis": "node --harmony node_modules/.bin/istanbul cover node_modules/.bin/_mocha --report lcovonly -- --require should",
    "examples-multer": "npm run test && node --harmony examples/multer.js",
    "examples-koa-router": "npm run test && node --harmony examples/koa-router.js"
  },
  "author": {
    "name": "Charlike Make Reagent",
    "email": "mameto_100@mail.bg",
    "url": "https://github.com/tunnckoCore"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tunnckoCore/koa-better-body.git"
  },
  "keywords": [
    "api",
    "body",
    "bodyparser",
    "csp",
    "csp-report",
    "data",
    "form",
    "formdata",
    "formidable",
    "json",
    "koa",
    "middleware",
    "multipart",
    "multiple",
    "parse",
    "parser",
    "report",
    "request",
    "upload",
    "urlencoded"
  ],
  "license": {
    "type": "MIT",
    "url": "https://github.com/tunnckoCore/koa-better-body/blob/master/license.md"
  },
  "dependencies": {
    "arr-union": "~2.0.0",
    "co-body": "~1.0.0",
    "extend": "~2.0.0",
    "formidable": "~1.0.16"
  },
  "devDependencies": {
    "koa": "*",
    "koa-router": "*",
    "koa-resource-router": "*",
    "multiline": "*",
    "should": "*",
    "supertest": "*",
    "istanbul-harmony": "~0.3.1",
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.11.14",
    "npm": ">=1.4.28"
  },
  "readme": "## [![npm][npmjs-img]][npmjs-url] [![mit license][license-img]][license-url] [![build status][travis-img]][travis-url] [![coverage status][coveralls-img]][coveralls-url] [![deps status][daviddm-img]][daviddm-url]\n\n> A [koa][koa-url] body parser middleware with support for `multipart`, `json`, [`csp-report`][csp-report] and `urlencoded` request bodies. Via [`formidable`][formidable-url] and [`co-body`][cobody-url].\n\n## Install\n```\nnpm i --save koa-better-body\nnpm test\n```\n\n\n## Usage\n> For more use-cases see the [tests](./test.js) or [examples](./examples) folder.\n\n- [`examples/multer`](./examples/multer.js) - usage like Express's bodyParser - [multer][multer-url] `npm run examples-multer`\n- [`examples/koa-router`](./examples/koa-router.js) - usage with Alex's [koa-router][koa-router-url] `npm run examples-koa-router`\n\n### Extending default types\n> Every new defined type, will be appended to defaults, [see defaults](./index.js#L35-51)\n\n```js\napp.use(koaBody({\n  extendTypes: {\n    // will parse application/x-javascript type body as a JSON string\n    json: ['application/x-javascript'],\n    multipart: ['multipart/mixed']\n  }\n}));\n```\nwill expects request bodies\n```bash\napplication/json\napplication/json-patch+json\napplication/vnd.api+json\napplication/csp-report\napplication/x-javascript\n\napplication/x-www-form-urlencoded\n\nmultipart/form-data\nmultipart/mixed\n```\n\n\n## [.koaBetterBody](index.js#L71)\n> However, `koa-better-body` have few custom options, see also [co-body][cobody-url], [raw-body][rawbody-url], [formidable][formidable-url]\n\n* `[options]` **{Object}**  \n  - `patchNode` **{Boolean}** Patch request body to Node's `ctx.req` object, default `false`\n  - `patchKoa` **{Boolean}** Patch request body to Koa's `ctx.request` object, default `true`\n  - `jsonLimit` **{String|Number}** The byte limit of the JSON body, default `1mb`\n  - `formLimit` **{String|Number}** The byte limit of the form body, default `56kb`\n  - `encoding` **{String}** Sets encoding for incoming form fields, default `utf-8`\n  - `encode` **{String}** alias of `opts.encoding`\n  - `multipart` **{Boolean}** Support `multipart/form-data` request bodies, default `false`\n  - `fieldsKey` **{String|Boolean}** Name of the key for fields in the body object or `false`\n  - `filesKey` **{String|Boolean}** Name of the key for files in the body object or `false`\n  - `extendTypes` **{Object}** extending request types, [see defaults](./index.js#L35-51)\n    + `multipart` **{Array}** array with multipart types, default `['multipart/form-data']`\n    + `json` **{Array}** array with json types, default `['application/x-www-form-urlencoded']`\n    + `form` **{Array}** array with form types\n  - `formidable` **{Object}** Options that are passing to `formidable`\n    + `formidable.maxFields` **{Number}** See [formidable-options](./readme.md#formidable-options). our default `10`\n    + `formidable.multiples` **{Boolean}** See [formidable-options](./readme.md#formidable-options), our default `true`\n    + `formidable.keepExtensions` **{Boolean}** See [formidable-options](./readme.md#formidable-options), our default `true`\n* `return` **{GeneratorFunction}** That you can use with [koa][koa-url] or [co][co-url]\n\n### formidable options\n> See [node-formidable][formidable-url] for a full list of options\n\n- `bytesExpected` **{Integer}** The expected number of bytes in this form, default `null`\n- `maxFields` **{Integer}** Limits the number of fields that the querystring parser will decode, default `1000`\n- `maxFieldsSize` **{Integer}** Limits the amount of memory a field can allocate _in bytes_, default `2mb`\n- `uploadDir` **{String}** Sets the directory for placing file uploads in, default `os.tmpDir()`\n- `hash` **{String}** If you want checksums calculated for incoming files - `'sha1'` or `'md5'`, default `false`\n- `multiples` **{Boolean}** Multiple file uploads or no, default `false`\n\n\n## Author\n**Charlike Mike Reagent**\n+ [gratipay/tunnckoCore][author-gratipay]\n+ [twitter/tunnckoCore][author-twitter]\n+ [github/tunnckoCore][author-github]\n+ [npmjs/tunnckoCore][author-npmjs]\n+ [more ...][contrib-more]\n\n\n## License [![MIT license][license-img]][license-url]\nCopyright (c) 2014-2015 [Charlike Mike Reagent][contrib-more], [contributors][contrib-graf].  \nReleased under the [`MIT`][license-url] license.\n\n\n[npmjs-url]: http://npm.im/koa-better-body\n[npmjs-img]: https://img.shields.io/npm/v/koa-better-body.svg?style=flat&label=koa-better-body\n\n[coveralls-url]: https://coveralls.io/r/tunnckoCore/koa-better-body?branch=master\n[coveralls-img]: https://img.shields.io/coveralls/tunnckoCore/koa-better-body.svg?style=flat\n\n[license-url]: https://github.com/tunnckoCore/koa-better-body/blob/master/license.md\n[license-img]: https://img.shields.io/badge/license-MIT-blue.svg?style=flat\n\n[travis-url]: https://travis-ci.org/tunnckoCore/koa-better-body\n[travis-img]: https://img.shields.io/travis/tunnckoCore/koa-better-body.svg?style=flat\n\n[daviddm-url]: https://david-dm.org/tunnckoCore/koa-better-body\n[daviddm-img]: https://img.shields.io/david/tunnckoCore/koa-better-body.svg?style=flat\n\n[author-gratipay]: https://gratipay.com/tunnckoCore\n[author-twitter]: https://twitter.com/tunnckoCore\n[author-github]: https://github.com/tunnckoCore\n[author-npmjs]: https://npmjs.org/~tunnckocore\n\n[contrib-more]: http://j.mp/1stW47C\n[contrib-graf]: https://github.com/tunnckoCore/koa-better-body/graphs/contributors\n\n***\n\n_Powered and automated by [kdf](https://github.com/tunnckoCore), February 6, 2015_\n\n[cobody-url]: https://github.com/visionmedia/co-body\n[rawbody-url]: https://github.com/stream-utils/raw-body\n[multer-url]: https://github.com/expressjs/multer\n[koa-router-url]: https://github.com/alexmingoia/koa-router\n[koa-url]: https://github.com/koajs/koa\n[formidable-url]: https://github.com/felixge/node-formidable\n[co-url]: https://github.com/visionmedia/co\n[csp-report]: https://mathiasbynens.be/notes/csp-reports\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/tunnckoCore/koa-better-body/issues"
  },
  "homepage": "https://github.com/tunnckoCore/koa-better-body",
  "_id": "koa-better-body@1.0.17",
  "_shasum": "3289a2254921f29e661ce9f2934deb535ad6f93f",
  "_from": "koa-better-body@*",
  "_resolved": "https://registry.npmjs.org/koa-better-body/-/koa-better-body-1.0.17.tgz"
}
